{"version":3,"file":"static/js/214.1aa9913d.chunk.js","mappings":"qSAKMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAHY,gCAIZC,OAAQ,CAAEC,QALE,sCAQHC,EAAW,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACAV,EAASM,IAAI,eAAgB,CAChDH,OAAQ,CACRO,MAAAA,KAHmB,uBACfH,EADe,EACfA,KADe,kBAMhBA,EAAKC,SANW,2CAAH,sDASXG,EAAe,mCAAG,WAAMC,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,IADlB,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKO,MAFe,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qD,qFC9Bb,SAASQ,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAU,YAAd,SACCH,EAAOI,KAAI,YAAoB,IAAjBT,EAAgB,EAAhBA,GAAIU,EAAY,EAAZA,MACf,OACA,eAAIF,UAAU,YAAd,UACI,SAAC,KAAD,CAAMG,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAab,GAAhD,SACCU,KAF0BV,EAMlC,KAGR,C,uJCdc,SAASc,IACpB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAQkB,EAAatB,IAAI,SAE/B,GAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACN,GAAKtB,EAAL,CACA,IAAMuB,EAAW,mCAAG,8GAEKxB,EAAAA,EAAAA,IAAYC,GAFjB,OAEVO,EAFU,OAGhBc,EAAUd,GAHM,gDAKhBiB,QAAQC,IAAR,MALgB,qGAAH,qDAUjBF,GAXkB,CAYrB,GAAE,CAACvB,IAOJ,OACI,iCACA,gDACA,kBAAMU,UAAU,aAAagB,SARZ,SAAAC,GACjBA,EAAEC,iBACFT,EAAgB,CAAEnB,MAAO2B,EAAEE,OAAOC,SAAS9B,MAAM+B,QACjDJ,EAAEE,OAAOG,OACZ,EAIG,WACI,kBAAOtB,UAAU,cAAcuB,YAAY,oBAAoBC,KAAK,QAAQC,KAAK,UACjF,mBAAQzB,UAAU,YAAlB,uBAEHH,EAAO6B,OAAS,IAAK,SAAC9B,EAAA,EAAD,CAAWC,OAAQA,MAGhD,C","sources":["Api/Api.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '74f606ab36fa7bf868ad1de218dc7286';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n    baseURL,\n    params: { api_key },\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get('trending/movie/week');\n    return data.results;\n};\n\nexport const searchMovie = async query => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n        query,\n        },\n    });\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n};\n\nexport const getMovieCredits = async id => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data.results;\n};","import { Link, useLocation } from 'react-router-dom';\nimport \"./MovieList.css\";\n\n\nexport default function MovieList({ movies }) {\n    const location = useLocation();\n\n    return (\n        <ul className='movieList'>\n        {movies.map(({ id, title }) => {\n            return (\n            <li className=\"movieItem\" key={id}>\n                <Link state={{ from: location }} to={`/movies/${id}`}>\n                {title}\n                </Link>\n            </li>\n            );\n        })}\n        </ul>\n    );\n}","import { useEffect, useState } from 'react';\nimport { searchMovie } from '../../Api/Api';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport \"./Movies.css\";\n\nexport default function Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        if (!query) return;\n        const fetchMovies = async () => {\n        try {\n            const movies = await searchMovie(query);\n            setMovies(movies);\n        } catch (error) {\n            console.log(error);\n        } finally {\n            // console.log('finally');\n        }\n        };\n        fetchMovies();\n    }, [query]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSearchParams({ query: e.target.elements.query.value });\n        e.target.reset();\n    };\n    return (\n        <>\n        <h2>Find movie by name</h2>\n        <form className='searchForm' onSubmit={handleSubmit}>\n            <input className='searchInput' placeholder=\"put in movie name\" name=\"query\" type=\"text\" />\n            <button className='searchBtn'>Search</button>\n        </form>\n        {movies.length > 0 && <MovieList movies={movies} />}\n        </>\n    );\n}"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","MovieList","movies","location","useLocation","className","map","title","state","from","to","Movies","useSearchParams","searchParams","setSearchParams","useState","setMovies","useEffect","fetchMovies","console","log","onSubmit","e","preventDefault","target","elements","value","reset","placeholder","name","type","length"],"sourceRoot":""}