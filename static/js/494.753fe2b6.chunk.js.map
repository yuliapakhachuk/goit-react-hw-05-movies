{"version":3,"file":"static/js/494.753fe2b6.chunk.js","mappings":"qSAKMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAHY,gCAIZC,OAAQ,CAAEC,QALE,sCAQHC,EAAW,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACAV,EAASM,IAAI,eAAgB,CAChDH,OAAQ,CACRO,MAAAA,KAHmB,uBACfH,EADe,EACfA,KADe,kBAMhBA,EAAKC,SANW,2CAAH,sDASXG,EAAe,mCAAG,WAAMC,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,IADlB,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKO,MAFe,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qD,8JC1Bb,SAASQ,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEIhB,EAAAA,EAAAA,IAAgBM,GAFpB,OAEVK,EAFU,OAGhBC,EAASD,GAHO,gDAKhBM,QAAQC,IAAR,MALgB,yDAAH,qDAQjBF,GACH,GAAE,CAACV,KAECK,EACD,OAAO,KAGX,IAAQQ,EAAuDR,EAAvDQ,OAAQC,EAA+CT,EAA/CS,SAAUC,EAAqCV,EAArCU,aAAcC,EAAuBX,EAAvBW,MAAOC,EAAgBZ,EAAhBY,YAE/C,OACI,kBAAMC,UAAU,gBAAhB,WACI,mBAAQA,UAAU,UACdC,QAAS,WAAO,IAAD,IACfjB,EAAQ,oBAACK,EAASa,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,QAChC,EAHL,sBAOA,iBAAKH,UAAU,UAAf,WACI,gBACAI,MAAM,MACNC,IAAG,0CAAqCN,GACxCO,IAAKR,KAEL,iBAAKE,UAAU,UAAf,WACI,wBAAKF,KACL,yCAAgC,GAAfD,GAAmBU,UAApC,SACA,sCACA,uBAAIX,KACJ,oCACA,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAQa,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,KAAO,GAAnC,GAAwC,aAGnE,oDACA,iBAAKX,UAAU,UAAf,WACI,SAAC,KAAD,CAASA,UAAU,UAAUY,GAAG,OAAhC,mBACA,SAAC,KAAD,CAASZ,UAAU,UAAUY,GAAG,UAAhC,yBAKJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C","sources":["Api/Api.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '74f606ab36fa7bf868ad1de218dc7286';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n    baseURL,\n    params: { api_key },\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get('trending/movie/week');\n    return data.results;\n};\n\nexport const searchMovie = async query => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n        query,\n        },\n    });\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n};\n\nexport const getMovieCredits = async id => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data.results;\n};","import { Outlet, useParams, useNavigate, useLocation, NavLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../../Api/Api';\nimport { Suspense } from 'react';\nimport \"../../components/SharedLayout/SharedLayout.css\"\n// import { StyledLink } from 'components/SharedLayout/SharedLayoutStyled';\nimport \"./MovieDetails.css\";\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    \n    useEffect(() => {\n        const fetchMovies = async () => {\n        try {\n            const movie = await getMovieDetails(movieId);\n            setMovie(movie);\n        } catch (error) {\n            console.log(error);\n        }\n        };\n        fetchMovies();\n    }, [movieId]);\n\n    if (!movie) {\n        return null;\n    }\n\n    const { genres, overview, vote_average, title, poster_path } = movie;\n\n    return (\n        <main className='containerMain'>\n            <button className=\"homeBtn\"\n                onClick={() => {\n                navigate(location.state?.from ?? '/home');\n                }}\n            >\n                Go back\n            </button>\n            <div className='wrapper'>\n                <img\n                width=\"250\"\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n                />\n                <div className='details'>\n                    <h2>{title}</h2>\n                    <p>User Score: {(vote_average * 10).toFixed()} %</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <p>{genres?.reduce((acc, genre) => acc + genre.name + ' ', '')}</p>\n                </div>\n            </div>\n            <h3>Additional information</h3>\n            <div className='wrapper'>\n                <NavLink className=\"navLink\" to=\"cast\">Cast</NavLink>\n                <NavLink className=\"navLink\" to=\"reviews\">Reviews</NavLink>\n\n                {/* <StyledLink to=\"cast\">Cast</StyledLink>\n                <StyledLink to=\"reviews\">Reviews</StyledLink> */}\n            </div>\n            <Suspense fallback={<div>...Loading</div>}>\n                <Outlet />\n            </Suspense>\n        </main>\n    );\n}"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","MovieDetails","movieId","useParams","navigate","useNavigate","useState","movie","setMovie","location","useLocation","useEffect","fetchMovies","console","log","genres","overview","vote_average","title","poster_path","className","onClick","state","from","width","src","alt","toFixed","reduce","acc","genre","name","to","Suspense","fallback"],"sourceRoot":""}