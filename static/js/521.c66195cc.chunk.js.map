{"version":3,"file":"static/js/521.c66195cc.chunk.js","mappings":"qSAKMA,E,MAAWC,GAAAA,OAAa,CAC1BC,QAHY,gCAIZC,OAAQ,CAAEC,QALE,sCAQHC,EAAW,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACAV,EAASM,IAAI,eAAgB,CAChDH,OAAQ,CACRO,MAAAA,KAHmB,uBACfH,EADe,EACfA,KADe,kBAMhBA,EAAKC,SANW,2CAAH,sDASXG,EAAe,mCAAG,WAAMC,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,IADlB,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKO,MAFe,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACJZ,EAASM,IAAT,gBAAsBM,EAAtB,aADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qD,8IC7Bb,SAASQ,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEGT,EAAAA,EAAAA,IAAgBI,GAFnB,OAEVH,EAFU,OAGhBM,EAAQN,GAHQ,gDAKhBS,QAAQC,IAAR,MALgB,yDAAH,qDAQjBF,GACH,GAAE,CAACL,KAEA,eAAIQ,UAAU,YAAd,SACiB,IAAhBX,EAAKY,QACFZ,EAAKa,KAAI,YAA4C,IAAzCf,EAAwC,EAAxCA,GAAIgB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjC,OACIA,IACA,gBAAIL,UAAU,YAAd,WACI,wBAAKG,KACL,gBACAH,UAAU,WACVM,MAAM,MACNC,IAAG,0CAAqCF,GACxCG,IAAKL,KAEL,wCACA,uBAAIC,MATuBjB,EAalC,KAGZ,C","sources":["Api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '74f606ab36fa7bf868ad1de218dc7286';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n    baseURL,\n    params: { api_key },\n});\n\nexport const getTrending = async () => {\n    const { data } = await instance.get('trending/movie/week');\n    return data.results;\n};\n\nexport const searchMovie = async query => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n        query,\n        },\n    });\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n};\n\nexport const getMovieCredits = async id => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data.results;\n};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../Api/Api';\nimport \"./Cast.css\";\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n        try {\n            const cast = await getMovieCredits(movieId);\n            setCast(cast);\n        } catch (error) {\n            console.log(error);\n        }\n        };\n        fetchMovies();\n    }, [movieId]);\n    return (\n        <ul className='actorList'>\n        {cast.length !== 0 &&\n            cast.map(({ id, name, character, profile_path }) => {\n            return (\n                profile_path && (\n                <li className=\"actorItem\" key={id}>\n                    <h4>{name}</h4>\n                    <img\n                    className='actorImg'\n                    width=\"100\"\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                    />\n                    <p>Character: </p>\n                    <p>{character}</p>\n                </li>\n                )\n            );\n            })}\n        </ul>\n    );\n}"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","Cast","movieId","useParams","useState","setCast","useEffect","fetchMovies","console","log","className","length","map","name","character","profile_path","width","src","alt"],"sourceRoot":""}